"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getCurrentUser = void 0;
const getUserFromJWT = async (cognitoIdToken) => {
    const tokenSections = cognitoIdToken.split('.');
    if (tokenSections.length < 2) {
        throw new Error('Requested token is invalid');
    }
    const payloadJSON = Buffer.from(tokenSections[1], 'base64').toString('utf8');
    const payload = JSON.parse(payloadJSON);
    return {
        username: payload['cognito:username'],
        cognito_groups: payload['cognito:groups'],
        email: payload['email'],
    };
};
const getCurrentUser = async (req) => {
    return await getUserFromJWT(req.headers.authorization ?? '');
};
exports.getCurrentUser = getCurrentUser;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQXV0aFV0aWxpdHkuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJBdXRoVXRpbGl0eS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFJQSxNQUFNLGNBQWMsR0FBRyxLQUFLLEVBQUUsY0FBc0IsRUFBRSxFQUFFO0lBQ3BELE1BQU0sYUFBYSxHQUFHLGNBQWMsQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLENBQUM7SUFDaEQsSUFBSSxhQUFhLENBQUMsTUFBTSxHQUFHLENBQUMsRUFBRSxDQUFDO1FBQzNCLE1BQU0sSUFBSSxLQUFLLENBQUMsNEJBQTRCLENBQUMsQ0FBQztJQUNsRCxDQUFDO0lBQ0QsTUFBTSxXQUFXLEdBQUcsTUFBTSxDQUFDLElBQUksQ0FBQyxhQUFhLENBQUMsQ0FBQyxDQUFDLEVBQUUsUUFBUSxDQUFDLENBQUMsUUFBUSxDQUFDLE1BQU0sQ0FBQyxDQUFDO0lBQzdFLE1BQU0sT0FBTyxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsV0FBVyxDQUFDLENBQUM7SUFFeEMsT0FBTztRQUNILFFBQVEsRUFBRSxPQUFPLENBQUMsa0JBQWtCLENBQUM7UUFDckMsY0FBYyxFQUFFLE9BQU8sQ0FBQyxnQkFBZ0IsQ0FBQztRQUN6QyxLQUFLLEVBQUUsT0FBTyxDQUFDLE9BQU8sQ0FBQztLQUMxQixDQUFBO0FBQ0wsQ0FBQyxDQUFBO0FBRU0sTUFBTSxjQUFjLEdBQUcsS0FBSyxFQUFFLEdBQW9CLEVBQUUsRUFBRTtJQUN6RCxPQUFPLE1BQU0sY0FBYyxDQUFDLEdBQUcsQ0FBQyxPQUFPLENBQUMsYUFBYSxJQUFJLEVBQUUsQ0FBQyxDQUFDO0FBQ2pFLENBQUMsQ0FBQTtBQUZZLFFBQUEsY0FBYyxrQkFFMUIiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgQW1hem9uLmNvbSwgSW5jLiBvciBpdHMgYWZmaWxpYXRlcy4gQWxsIFJpZ2h0cyBSZXNlcnZlZC5cbi8vIFNQRFgtTGljZW5zZS1JZGVudGlmaWVyOiBNSVQtMFxuaW1wb3J0IHsgQVBJR2F0ZXdheUV2ZW50IH0gZnJvbSAnYXdzLWxhbWJkYSc7XG5cbmNvbnN0IGdldFVzZXJGcm9tSldUID0gYXN5bmMgKGNvZ25pdG9JZFRva2VuOiBzdHJpbmcpID0+IHtcbiAgICBjb25zdCB0b2tlblNlY3Rpb25zID0gY29nbml0b0lkVG9rZW4uc3BsaXQoJy4nKTtcbiAgICBpZiAodG9rZW5TZWN0aW9ucy5sZW5ndGggPCAyKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcignUmVxdWVzdGVkIHRva2VuIGlzIGludmFsaWQnKTtcbiAgICB9XG4gICAgY29uc3QgcGF5bG9hZEpTT04gPSBCdWZmZXIuZnJvbSh0b2tlblNlY3Rpb25zWzFdLCAnYmFzZTY0JykudG9TdHJpbmcoJ3V0ZjgnKTtcbiAgICBjb25zdCBwYXlsb2FkID0gSlNPTi5wYXJzZShwYXlsb2FkSlNPTik7XG5cbiAgICByZXR1cm4ge1xuICAgICAgICB1c2VybmFtZTogcGF5bG9hZFsnY29nbml0bzp1c2VybmFtZSddLFxuICAgICAgICBjb2duaXRvX2dyb3VwczogcGF5bG9hZFsnY29nbml0bzpncm91cHMnXSxcbiAgICAgICAgZW1haWw6IHBheWxvYWRbJ2VtYWlsJ10sXG4gICAgfVxufVxuXG5leHBvcnQgY29uc3QgZ2V0Q3VycmVudFVzZXIgPSBhc3luYyAocmVxOiBBUElHYXRld2F5RXZlbnQpID0+IHtcbiAgICByZXR1cm4gYXdhaXQgZ2V0VXNlckZyb21KV1QocmVxLmhlYWRlcnMuYXV0aG9yaXphdGlvbiA/PyAnJyk7XG59Il19